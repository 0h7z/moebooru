<% content_for("html_header") do %>
  <script type="text/javascript">
    if(navigator.platform.indexOf("iPhone") != -1 || navigator.platform == "iPad") // includes "iPhone Simulator"
      document.write('<meta name="viewport" content="width=device-width; initial-scale=1.0; maximum-scale=1.0; user-scalable=0;">');
    else
      document.write('<meta name="viewport" content="target-densityDpi=150; user-scalable=0;">');

    if(navigator.platform == "iPad")
      document.write('<link rel="apple-touch-startup-image" href="/images/iphone-startup-ipad.png">');
    else
      document.write('<link rel="apple-touch-startup-image" href="/images/iphone-startup.png">');
  </script>

  <meta name="apple-mobile-web-app-capable" content="yes" >  
  <meta name="apple-mobile-web-app-status-bar-style" content="black">

  <link rel="apple-touch-icon" href="/images/iphone-icon.png">
<% end %>

<div id="debug2" style="position: fixed; bottom: 100px; background-color: #000;"></div>

<div id="post-browser" class="post-browser">
  <a style="display: none;" class="browser-thumb-hover-overlay" href="#" tabindex="-1">
    <img src="about:blank" alt="">
  </a>

  <div class="post-browser-posts-container">
    <ul class="post-browser-posts"></ul>
    <div class="post-browser-no-results" style="display: none; text-align: center; font-size: 200%;">No search results.</div>
  </div>

  <div class="browser-bottom-bar">
    <form action="#" class="tags-form" method="get" style="display: inline;">
      <input class="post-browser-tags-form" name="tags" size="20" type="text">
      <input style="display: none;" type="submit">
    </form>
  </div>
</div>

<div id="post-content" style="width: 100%;">
  <!-- Make sure the image is cropped to the viewport.  This happens already for most browsers,
       since body is overflow: hidden, but iPhone's browser doesn't handle that correctly. -->
  <div style="width: 100%; height: 100%; position: absolute; top: 0; left: 0; overflow: hidden;" class="image-container"></div>
  <div class="post-info" style="display: none;">
    <ul>

      <li>Post #<span class="post-id"></span></li>
      <li>Posted: <span class="posted-at"></span><span class="posted-by"> by <a href="#"></a></span></li>
      <li class="post-dimensions">Size: <span></span></li>
      <li class="post-source">Source: <a href="#"></a></li>
      <li>Rating: <span class="rating"></span></li>
      <li id="vote-container" class="vote-container">Score: <span class="post-score"></span> <%= vote_widget(@current_user) %> <%= vote_tooltip_widget() %></li>

      <li class="status-deleted"> 
        This post was deleted.
        <span class="by-container">By: <a href="#" class="by"></a></span>
        Reason: <span class="reason"></span>.
      </li>
      <li><a href="#" class="post-view-larger">View larger version</a></li>
      <li><a href="#" class="download-image">Download image (<span class="download-image-desc"></span>)</a></li>
      <li><a href="#" class="download-jpeg">Download larger version (<span class="download-jpeg-desc"></span>)</a></li>
      <li><a href="#" class="download-png">Download PNG (<span class="download-png-desc"></span>)</a></li>
      <li><a href="#" class="post-show-link">View regular post page</a></li>
      <li class="parent-post">This post has a <a href="#">parent post</a><span class="reparent-post advanced-editing"><a href="#"> (make this post the parent)</a>.
      </li>
      <li class="child-posts">This post has <a href="#">child posts</a>.</li>
      <li class="flagged-info">This post was flagged for deletion by <a href="#" class="by"></a>.  Reason: <span class="reason"></span>.</li>
      <li class="status-pending">This post is pending moderator approval.</li>
      <li class="status-held">
        This post has been temporarily held from the index by the poster.
        <span class="activate-post">
          <a href="#">(activate it)</a>
        </span>
      </li>

    </ul>
  </div>
</div>

<script type="text/javascript">
var debug;

document.observe("dom:loaded", function()
{
  debug = new DebugWindow();

  InitAdvancedEditing();
  InitializeFullScreenBrowserHandlers();

  var normalize_hash = function(h)
  {
    // Normalize:
    // post_id/search
    var path = h.get("");
    if(path != null)
    {
      var post_id = path.split("/", 1)[0];
      h.set("", null);
      if(post_id != "")
        h.set("post-id", post_id);
      if(path.substr(post_id.length, 1) == "/")
        h.set("tags", path.substr(post_id.length + 1));
    }

    // Validate parameters.
    var post_id = h.get("post-id");
    if(post_id != null && isNaN(parseInt(post_id)))
      h.set("post-id", null);
    return h;
  }

  var denormalize_hash = function(h)
  {
    // Denormalize; the input will always be normalized.
    var str = "";

    var post_id = h.get("post-id");
    if(post_id != null)
    {
      str += post_id;
      h.set("post-id", null);
    }
    var tags = h.get("tags");
    if(tags != null)
    {
      str += "/" + tags;
      h.set("tags", null);
    }

    h.set("", str);
    return h;
  }

  UrlHash.set_normalize(normalize_hash, denormalize_hash);

  function initialize_browser()
  {
    var view = new BrowserView($("post-content"));
    var thumbnail_view = new ThumbnailView($("post-browser"), view);
    new WindowTitleHandler();
    new PostLoader();

    new InputHandler();

    var container = $("post-browser");
    var update = function()
    {
      container.down(".tags-form").tags.value = UrlHash.get("tags") || "";
    }

    update();

    container.down(".tags-form").observe("submit", function(e)
    {
      e.stop();

      var tags_element = container.down(".tags-form").tags;
      tags_element.blur();

      var tags = tags_element.value;
      UrlHash.set({tags: tags});
    });

    UrlHash.observe("tags", function() {
      update();
    });
    document.observe("viewer:focus-tag-box", function(e) {
      thumbnail_view.show_thumb_bar(true);
      container.down(".tags-form").tags.focus();
      container.down(".tags-form").tags.select();
      return true;
    });
  }

  if(AndroidDetectWindowSize.required())
  {
    /* We need to figure out the window size.  Do this before starting up the browser,
     * to speed it up. */
    var trigger_initialization = function(e)
    {
      document.stopObserving("resize", trigger_initialization);
      initialize_browser.defer();
    }
    document.observe("resize", trigger_initialization);

    /* This will always fire resize at least once. */
    new AndroidDetectWindowSize();
  }
  else
  {
    /* Normal initialization. */
    initialize_browser();
  }
}.bindAsEventListener(null));
</script>

