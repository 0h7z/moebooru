Index: image_store/remote_hierarchy.rb
===================================================================
--- image_store/remote_hierarchy.rb	(revision 755)
+++ image_store/remote_hierarchy.rb	(working copy)
@@ -8,9 +8,14 @@
     end
 
     def select_random_image_server
+      if not self.is_warehoused?
+        # return CONFIG["url_base"]
+        return CONFIG["image_servers"][0]
+      end
+
 #      age = Time.now - self.created_at
       i = 0
-#      if age > (60*60*3) then
+#      if age > (60*60*24) then
 #        i = 2 # Ascaroth
 #      elsif age > (60*60*24)*2 then
 #        i = 1 # saki
@@ -28,17 +33,9 @@
 
     def file_url
       if CONFIG["use_pretty_image_urls"] then
-        if self.is_warehoused?
-          select_random_image_server() + "/image/#{md5}/#{url_encode(pretty_file_name)}.#{file_ext}"
-        else
-          CONFIG["url_base"] + "/image/#{md5}/#{url_encode(pretty_file_name)}.#{file_ext}"
-        end
+        select_random_image_server + "/image/#{md5}/#{url_encode(pretty_file_name)}.#{file_ext}"
       else
-        if self.is_warehoused?
-          select_random_image_server() + "/data/#{file_hierarchy}/#{file_name}"
-        else
-          CONFIG["url_base"] + "/data/#{file_hierarchy}/#{file_name}"
-        end
+        select_random_image_server + "/data/#{file_hierarchy}/#{file_name}"
       end
     end
 
@@ -68,7 +65,7 @@
         if status == "deleted"
           CONFIG["url_base"] + "/deleted-preview.png"
         elsif image?
-          CONFIG["url_base"] + "/data/preview/#{file_hierarchy}/#{md5}.jpg"
+          CONFIG["image_servers"][0] + "/data/preview/#{file_hierarchy}/#{md5}.jpg"
         else
           CONFIG["url_base"] + "/download-preview.png"
         end
@@ -82,11 +79,7 @@
         path = "/data/sample/#{file_hierarchy}/" + CONFIG["sample_filename_prefix"] + "#{md5}.jpg"
       end
 
-      if self.is_warehoused?
-        return select_random_image_server() + path
-      else
-        return CONFIG["url_base"] + path
-      end
+      return select_random_image_server + path
     end
 
     def delete_file
